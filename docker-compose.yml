version: '3'
networks:
  pulsar:
    driver: bridge
services:
# Start zookeeper
  zookeeper:
    image: apachepulsar/pulsar:latest
    profiles: ["pulsar"]
    container_name: zookeeper
    restart: on-failure
    networks:
      - pulsar
    volumes:
      - ./data/zookeeper:/pulsar/data/zookeeper
    environment:
      - metadataStoreUrl=zk:zookeeper:2181
    command: >
      bash -c "bin/apply-config-from-env.py conf/zookeeper.conf && \
             bin/generate-zookeeper-config.sh conf/zookeeper.conf && \
             exec bin/pulsar zookeeper"
    healthcheck:
      test: ["CMD", "bin/pulsar-zookeeper-ruok.sh"]
      interval: 10s
      timeout: 5s
      retries: 30

# Init cluster metadata
  pulsar-init:
    container_name: pulsar-init
    hostname: pulsar-init
    image: apachepulsar/pulsar:latest
    profiles: ["pulsar"]
    networks:
      - pulsar
    command: >
      bin/pulsar initialize-cluster-metadata \
               --cluster cluster-a \
               --zookeeper zookeeper:2181 \
               --configuration-store zookeeper:2181 \
               --web-service-url http://broker:8080 \
               --broker-service-url pulsar://broker:6650
    depends_on:
      zookeeper:
        condition: service_healthy

# Start bookie
  bookie:
    image: apachepulsar/pulsar:latest
    profiles: ["pulsar"]
    container_name: bookie
    restart: on-failure
    networks:
      - pulsar
    environment:
      - clusterName=cluster-a
      - zkServers=zookeeper:2181
      - metadataServiceUri=metadata-store:zk:zookeeper:2181
    depends_on:
      zookeeper:
        condition: service_healthy
      pulsar-init:
        condition: service_completed_successfully
  # Map the local directory to the container to avoid bookie startup failure due to insufficient container disks.
    volumes:
      - ./data/bookkeeper:/pulsar/data/bookkeeper
    command: bash -c "bin/apply-config-from-env.py conf/bookkeeper.conf
      && exec bin/pulsar bookie"

# Start broker
  broker:
    image: apachepulsar/pulsar:latest
    profiles: ["pulsar"]
    container_name: broker
    hostname: broker
    restart: on-failure
    networks:
      - pulsar
    environment:
      - metadataStoreUrl=zk:zookeeper:2181
      - zookeeperServers=zookeeper:2181
      - clusterName=cluster-a
      - managedLedgerDefaultEnsembleSize=1
      - managedLedgerDefaultWriteQuorum=1
      - managedLedgerDefaultAckQuorum=1
      - advertisedAddress=broker
      - advertisedListeners=external:pulsar://127.0.0.1:6650
    depends_on:
      zookeeper:
        condition: service_healthy
      bookie:
        condition: service_started
    ports:
      - "6650:6650"
      - "8080:8080"
    command: bash -c "bin/apply-config-from-env.py conf/broker.conf
      &&  exec bin/pulsar broker"
  
  # MySQL8
  db_compania:
    image: mysql:8
    profiles: ["db"]
    hostname: mysqldb
    container_name: mysqldb_compania
    cap_add:
      - SYS_NICE
    restart: always
    environment:
      - MYSQL_DATABASE=compania
      - MYSQL_ROOT_PASSWORD=adminseguro
    networks:
      - pulsar
    expose:
      - '3307'
    ports:
      - '3307:3306'
    volumes:
      - ./data/mysql:/var/lib/mysql_company
      - ./init_compania.sql:/docker-entrypoint-initdb.d/init.sql
  db_contrato:
    image: mysql:8
    profiles: ["db"]
    hostname: mysqldb
    container_name: mysqldb_contrato
    cap_add:
      - SYS_NICE
    restart: always
    environment:
      - MYSQL_DATABASE=contrato
      - MYSQL_ROOT_PASSWORD=adminseguro
    networks:
      - pulsar
    expose:
      - '3308'
    ports:
      - '3308:3306'
    volumes:
      - ./data/mysql:/var/lib/mysql_contrato
      - ./init_contrato.sql:/docker-entrypoint-initdb.d/init.sql  
  db_propiedad:
    image: mysql:8
    profiles: ["db"]
    hostname: mysqldb
    container_name: mysqldb_propiedad
    cap_add:
      - SYS_NICE
    restart: always
    environment:
      - MYSQL_DATABASE=propiedad
      - MYSQL_ROOT_PASSWORD=adminseguro
    networks:
      - pulsar
    expose:
      - '3309'
    ports:
      - '3309:3306'
    volumes:
      - ./data/mysql:/var/lib/mysql_propiedad
      - ./init_propiedad.sql:/docker-entrypoint-initdb.d/init.sql  

  # Servicios de Propiedades de los Alpes
  bff:
    container_name: bff
    hostname: bff
    image: pda-alpes/bff 
    profiles: ["all"]
    networks:
      - pulsar
    depends_on:
      - broker
    environment:
      - PULSAR_ADDRESS=broker
    ports:
      - "5000:5000"

  compania:
    image: "pda-alpes/compania"
    profiles: ["all"]
    container_name: compania
    hostname: compania
    depends_on:
     - broker
    networks:
      - pulsar
    environment:
      - PULSAR_ADDRESS=broker
    ports:
      - "5001:5001"

  contrato:
    image: "pda-alpes/contrato"
    profiles: ["all"]
    container_name: contrato
    hostname: contrato
    depends_on:
      - broker
    networks:
      - pulsar
    environment:
      - PULSAR_ADDRESS=broker
    ports:
      - "5002:5002"