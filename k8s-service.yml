###################################
# Contrato
###################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: contrato
  labels:
    app: contrato
spec:
  replicas: 1
  selector:
    matchLabels:
      app: contrato
  template:
    metadata:
      labels:
        app: contrato
    spec:
      containers:
        - name: contrato
          image: us-central1-docker.pkg.dev/apps-no-monoiliticas/misw-apps-no-monoliticas/contrato:2.0
          ports:
            - containerPort: 5002
          # Realizar pull siempre a la imagen
          imagePullPolicy: Always

---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: pda-contrato-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 5002
    type: HTTP
    requestPath: /health
---
kind: Service
apiVersion: v1
metadata:
  name: servicio-contrato
  annotations:
    cloud.google.com/backend-config: '{"default": "pda-contrato-config"}'
spec:
  type: NodePort
  selector:
    app: contrato
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5002
      nodePort: 31019

---
###################################
# compa√±ia
###################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: compania
  labels:
    app: compania
spec:
  replicas: 1
  selector:
    matchLabels:
      app: compania
  template:
    metadata:
      labels:
        app: compania
    spec:
      containers:
        - name: compania
          image: us-central1-docker.pkg.dev/apps-no-monoiliticas/misw-apps-no-monoliticas/compania:6.0
          ports:
            - containerPort: 5001
          imagePullPolicy: Always

---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: pda-compania-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 5001
    type: HTTP
    requestPath: /health
---
kind: Service
apiVersion: v1
metadata:
  name: servicio-compania
  annotations:
    cloud.google.com/backend-config: '{"default": "pda-compania-config"}'
spec:
  type: NodePort
  selector:
    app: compania
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5001
      nodePort: 31017
---
###################################
# Propiedades
###################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: propiedad
  labels:
    app: propiedad
spec:
  replicas: 1
  selector:
    matchLabels:
      app: propiedad
  template:
    metadata:
      labels:
        app: propiedad
    spec:
      containers:
        - name: propiedad
          image: us-central1-docker.pkg.dev/apps-no-monoiliticas/misw-apps-no-monoliticas/compania:2.0
          ports:
            - containerPort: 5003
          imagePullPolicy: Always

---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: pda-propiedad-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 5003
    type: HTTP
    requestPath: /health
---
kind: Service
apiVersion: v1
metadata:
  name: servicio-propiedad
  annotations:
    cloud.google.com/backend-config: '{"default": "pda-propiedad-config"}'
spec:
  type: NodePort
  selector:
    app: propiedad
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5003
      nodePort: 31015
---
###################################
# bff
###################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: bff
  labels:
    app: bff
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bff
  template:
    metadata:
      labels:
        app: bff
    spec:
      containers:
        - name: bff
          image: us-central1-docker.pkg.dev/apps-no-monoiliticas/misw-apps-no-monoliticas/bff:4.0
          ports:
            - containerPort: 5000
          imagePullPolicy: Always

---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: pda-bff-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 5000
    type: HTTP
    requestPath: /health
---
kind: Service
apiVersion: v1
metadata:
  name: servicio-bff
  annotations:
    cloud.google.com/backend-config: '{"default": "pda-bff-config"}'
spec:
  type: NodePort
  selector:
    app: bff
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
      nodePort: 31018


###################################
# INGRESS
###################################
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gateway-ingress-8
  labels:
    name: gateway-ingress-8
spec:
  rules:
  - http:
      paths:
      - pathType: Prefix
        path: /bff
        backend:
          service:
            name: servicio-bff
            port: 
              number: 80